jobs:
  build-and-test:
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v2
      with:
        submodules: true
    - continue-on-error: true
      name: Set up JDK 8
      uses: actions/setup-java@v2
      with:
        distribution: adopt
        java-version: '8'
    - continue-on-error: true
      name: Set up python 3.7
      uses: actions/setup-python@v2
      with:
        architecture: x64
        python-version: '3.7'
    - continue-on-error: true
      name: Install Python dependencies
      run: 'pip install -U --user wheel

        '
    - continue-on-error: true
      name: Cache Maven packages
      uses: actions/cache@v2
      with:
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        path: ~/.m2
        restore-keys: ${{ runner.os }}-m2
    - continue-on-error: true
      name: build
      run: 'mvn -B install -pl ${{ matrix.modules }} -am -DskipTests -Dfast -Pinstall-py-dep

        '
    - continue-on-error: true
      env:
        TF_ON_FLINK_IP: 127.0.0.1
      name: test
      run: 'mvn -B test -pl ${{ matrix.modules }}

        '
    strategy:
      fail-fast: false
      matrix:
        modules:
        - dl-on-flink-framework
        - dl-on-flink-operator
        - dl-on-flink-tensorflow-common
        - dl-on-flink-tensorflow
        - dl-on-flink-tensorflow-2.x
        - dl-on-flink-pytorch
        - dl-on-flink-lib
        - dl-on-flink-examples
        - dl-on-flink-examples/dl-on-flink-examples-pytorch
        - dl-on-flink-examples/dl-on-flink-examples-tensorflow
        - dl-on-flink-examples/dl-on-flink-examples-tensorflow-2.x
  build-and-test-python:
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v2
      with:
        submodules: true
    - continue-on-error: true
      name: Set up JDK 8
      uses: actions/setup-java@v2
      with:
        distribution: adopt
        java-version: '8'
    - continue-on-error: true
      name: Set up python 3.7
      uses: actions/setup-python@v2
      with:
        architecture: x64
        python-version: '3.7'
    - continue-on-error: true
      name: Install Python dependencies
      run: 'pip install -U --user wheel

        '
    - continue-on-error: true
      name: Cache Maven packages
      uses: actions/cache@v2
      with:
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        path: ~/.m2
        restore-keys: ${{ runner.os }}-m2
    - continue-on-error: true
      name: build
      run: 'mvn -B install -pl ${{ matrix.modules }} -am -DskipTests -Dfast -Pinstall-py-dep

        '
    - continue-on-error: true
      name: test
      run: 'cd ${{ matrix.modules }}/python

        pip install -e .

        python -m unittest discover -v .

        '
    strategy:
      fail-fast: false
      matrix:
        modules:
        - dl-on-flink-framework
        - dl-on-flink-tensorflow
        - dl-on-flink-tensorflow-2.x
        - dl-on-flink-pytorch
  build-and-upload-bin:
    needs: build-and-test
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v2
      with:
        submodules: true
    - continue-on-error: true
      name: Cache Maven packages
      uses: actions/cache@v2
      with:
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        path: ~/.m2
        restore-keys: ${{ runner.os }}-m2
    - continue-on-error: true
      name: Set up JDK 8
      uses: actions/setup-java@v2
      with:
        distribution: adopt
        java-version: '8'
    - continue-on-error: true
      name: Build bin
      run: mvn -B clean package -DskipTests
    - continue-on-error: true
      uses: actions/upload-artifact@v2
      with:
        name: dl-on-flink-dist
        path: dl-on-flink-dist/target/dl-on-flink-dist-*-bin.tgz
  build-linux-wheel:
    name: Build python${{ matrix.python-version }} ${{ matrix.package }} wheels on
      ubuntu-20.04
    needs: build-and-test-python
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v2
      with:
        submodules: true
    - continue-on-error: true
      name: Build python${{ matrix.python-version }} ${{ matrix.package }} wheels
      run: "docker run -i --rm -v $PWD:/v -w /v --net=host quay.io/pypa/manylinux2010_x86_64\
        \ \\\n  bash -c 'cd /v/${{ matrix.package }}/python \\\n    && python${{ matrix.python-version\
        \ }} setup.py bdist_wheel \\\n    && for f in dist/*.whl; do echo repairing\
        \ $f && bash -x -e /v/tools/auditwheel repair --plat manylinux2010_x86_64\
        \ -w /v/wheelhouse/ $f; done'\n"
    - continue-on-error: true
      uses: actions/upload-artifact@v2
      with:
        name: dl-on-flink-wheels
        path: ./wheelhouse/*.whl
    strategy:
      fail-fast: false
      matrix:
        exclude:
        - package: dl-on-flink-tensorflow
          python-version: 3.8
        package:
        - dl-on-flink-framework
        - dl-on-flink-tensorflow
        - dl-on-flink-tensorflow-2.x
        python-version:
        - 3.7
        - 3.8
  build-macos-wheel:
    name: Build python${{ matrix.python-version }} ${{ matrix.package }} wheels on
      macOS-10.15
    needs: build-and-test-python
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v2
      with:
        submodules: true
    - continue-on-error: true
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - continue-on-error: true
      name: Build python${{ matrix.python-version }} ${{ matrix.package }} wheels
        on macOS-10.15
      run: 'pip install wheel auditwheel

        export ROOT_DIR=$PWD

        mkdir $ROOT_DIR/wheelhouse

        cd ${{ matrix.package }}/python

        python setup.py bdist_wheel

        cp dist/* $ROOT_DIR/wheelhouse

        '
    - continue-on-error: true
      uses: actions/upload-artifact@v2
      with:
        name: dl-on-flink-wheels
        path: ./wheelhouse/*.whl
    strategy:
      fail-fast: false
      matrix:
        exclude:
        - package: dl-on-flink-tensorflow
          python-version: 3.8
        package:
        - dl-on-flink-framework
        - dl-on-flink-tensorflow
        - dl-on-flink-tensorflow-2.x
        python-version:
        - 3.7
        - 3.8
  build-pytorch-wheel:
    name: Build ${{ matrix.package }} wheels on ubuntu-20.04
    needs: build-and-test-python
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v2
      with:
        submodules: true
    - continue-on-error: true
      name: Set up python 3.7
      uses: actions/setup-python@v2
      with:
        architecture: x64
        python-version: '3.7'
    - continue-on-error: true
      name: Build python${{ matrix.python-version }} ${{ matrix.package }} wheels
      run: 'pip install wheel

        cd ${{ matrix.package }}/python

        python setup.py bdist_wheel

        '
    - continue-on-error: true
      uses: actions/upload-artifact@v2
      with:
        name: dl-on-flink-wheels
        path: ./dl-on-flink-pytorch/python/dist/*.whl
    strategy:
      fail-fast: false
      matrix:
        package:
        - dl-on-flink-pytorch
  deploy-snapshot:
    if: github.repository == 'flink-extended/dl-on-flink'
    needs:
    - run-example
    - test-wheel
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v2
      with:
        submodules: true
    - continue-on-error: true
      name: Cache Maven packages
      uses: actions/cache@v2
      with:
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        path: ~/.m2
        restore-keys: ${{ runner.os }}-m2
    - continue-on-error: true
      name: Set up python 3.7
      uses: actions/setup-python@v2
      with:
        architecture: x64
        python-version: '3.7'
    - continue-on-error: true
      name: Install Python dependencies
      run: 'pip install -U --user wheel

        '
    - continue-on-error: true
      name: Set up JDK 8
      uses: actions/setup-java@v2
      with:
        distribution: adopt
        gpg-passphrase: MAVEN_GPG_PASSPHRASE
        gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
        java-version: '8'
        server-id: oss_id
        server-password: MAVEN_PASSWORD
        server-username: MAVEN_USERNAME
    - continue-on-error: true
      env:
        MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}
        MAVEN_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}
        MAVEN_USERNAME: ${{ secrets.MAVEN_USERNAME }}
      name: Publish release to stage
      run: mvn -B clean deploy -DskipTests -Prelease
    - continue-on-error: true
      uses: actions/upload-artifact@v2
      with:
        name: dl-on-flink-dist
        path: dl-on-flink-dist/target/dl-on-flink-dist-*-bin.tgz
  run-example:
    needs:
    - build-and-upload-bin
    - build-linux-wheel
    - build-macos-wheel
    - build-pytorch-wheel
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v2
      with:
        submodules: true
    - continue-on-error: true
      name: Set up JDK 8
      uses: actions/setup-java@v2
      with:
        distribution: adopt
        java-version: '8'
    - continue-on-error: true
      uses: actions/setup-python@v2
      with:
        python-version: 3.7
    - continue-on-error: true
      uses: actions/download-artifact@v2
      with:
        name: dl-on-flink-wheels
        path: ./wheelhouse
    - continue-on-error: true
      uses: actions/download-artifact@v2
      with:
        name: dl-on-flink-dist
    - continue-on-error: true
      if: ${{ matrix.os == 'macos-10.15' }}
      name: Install coreutil on Mac
      run: brew install coreutils
    - continue-on-error: true
      name: Run example on ${{ matrix.os }}
      run: 'bash tools/run_example.sh dl-on-flink-*-bin.tgz wheelhouse

        '
    - continue-on-error: true
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: e2e-example-logs
        path: ./flink-*/log
    strategy:
      fail-fast: false
      matrix:
        os:
        - macos-10.15
        - ubuntu-18.04
        - ubuntu-20.04
  test-wheel:
    name: Test python${{ matrix.python-version }} ${{ matrix.package }} wheels on
      ${{ matrix.os }}
    needs:
    - build-linux-wheel
    - build-macos-wheel
    - build-pytorch-wheel
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v2
      with:
        submodules: true
    - continue-on-error: true
      name: Set up JDK 8
      uses: actions/setup-java@v2
      with:
        distribution: adopt
        java-version: '8'
    - continue-on-error: true
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - continue-on-error: true
      uses: actions/download-artifact@v2
      with:
        name: dl-on-flink-wheels
        path: ./wheelhouse
    - continue-on-error: true
      name: build
      run: 'mvn -B install -pl ${{ matrix.package }} -am -DskipTests

        '
    - continue-on-error: true
      env:
        TF_ON_FLINK_IP: 127.0.0.1
      name: test
      run: 'ls $PWD/wheelhouse

        pip install ${{ matrix.package }} -f file://${PWD}/wheelhouse

        mvn -B test -pl ${{ matrix.package }}

        '
    strategy:
      fail-fast: false
      matrix:
        exclude:
        - package: dl-on-flink-tensorflow
          python-version: 3.8
        - package: dl-on-flink-tensorflow-2.x
          python-version: 3.6
        os:
        - macOS-10.15
        - ubuntu-20.04
        package:
        - dl-on-flink-framework
        - dl-on-flink-tensorflow
        - dl-on-flink-tensorflow-2.x
        - dl-on-flink-pytorch
        python-version:
        - 3.7
        - 3.8
name: Prepare Release
on:
  repository_dispatch:
    types: trigger-ga___prepare-release.yaml
